
Bai1_Day8.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000540  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006d4  080006dc  000106dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006d4  080006d4  000106dc  2**0
                  CONTENTS
  4 .ARM          00000000  080006d4  080006d4  000106dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006d4  080006dc  000106dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006d4  080006d4  000106d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006d8  080006d8  000106d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000106dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080006dc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080006dc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000106dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001884  00000000  00000000  0001070c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005ab  00000000  00000000  00011f90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002a8  00000000  00000000  00012540  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000270  00000000  00000000  000127e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000bcc7  00000000  00000000  00012a58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000166a  00000000  00000000  0001e71f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003b6cd  00000000  00000000  0001fd89  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  0005b456  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b38  00000000  00000000  0005b524  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080006bc 	.word	0x080006bc

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	080006bc 	.word	0x080006bc

080001d4 <delay_ms>:
// Buzzer - PC9
#define BUZZER_PORT         GPIOC
#define BUZZER_PIN          GPIO_Pin_9

// Basic delay (simple but with some error)
void delay_ms(uint32_t ms) {
 80001d4:	b480      	push	{r7}
 80001d6:	b085      	sub	sp, #20
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
    uint32_t i, j;
    for (i = 0; i < ms; i++) {
 80001dc:	2300      	movs	r3, #0
 80001de:	60fb      	str	r3, [r7, #12]
 80001e0:	e00d      	b.n	80001fe <delay_ms+0x2a>
        for (j = 0; j < 5000; j++) {;}
 80001e2:	2300      	movs	r3, #0
 80001e4:	60bb      	str	r3, [r7, #8]
 80001e6:	e002      	b.n	80001ee <delay_ms+0x1a>
 80001e8:	68bb      	ldr	r3, [r7, #8]
 80001ea:	3301      	adds	r3, #1
 80001ec:	60bb      	str	r3, [r7, #8]
 80001ee:	68bb      	ldr	r3, [r7, #8]
 80001f0:	f241 3287 	movw	r2, #4999	; 0x1387
 80001f4:	4293      	cmp	r3, r2
 80001f6:	d9f7      	bls.n	80001e8 <delay_ms+0x14>
    for (i = 0; i < ms; i++) {
 80001f8:	68fb      	ldr	r3, [r7, #12]
 80001fa:	3301      	adds	r3, #1
 80001fc:	60fb      	str	r3, [r7, #12]
 80001fe:	68fa      	ldr	r2, [r7, #12]
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	429a      	cmp	r2, r3
 8000204:	d3ed      	bcc.n	80001e2 <delay_ms+0xe>
    }
}
 8000206:	bf00      	nop
 8000208:	bf00      	nop
 800020a:	3714      	adds	r7, #20
 800020c:	46bd      	mov	sp, r7
 800020e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000212:	4770      	bx	lr

08000214 <Flash_Onboard_LED>:

// Flash onboard LED (PA5)
void Flash_Onboard_LED(uint8_t times) {
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0
 800021a:	4603      	mov	r3, r0
 800021c:	71fb      	strb	r3, [r7, #7]
    GPIO_InitTypeDef gpio;

    RCC_AHB1PeriphClockCmd(LED_ONBOARD_RCC_CLK, ENABLE);
 800021e:	2101      	movs	r1, #1
 8000220:	2001      	movs	r0, #1
 8000222:	f000 fa07 	bl	8000634 <RCC_AHB1PeriphClockCmd>

    gpio.GPIO_Pin = LED_ONBOARD_GPIO_PIN;
 8000226:	2320      	movs	r3, #32
 8000228:	60fb      	str	r3, [r7, #12]
    gpio.GPIO_Mode = GPIO_Mode_OUT;
 800022a:	2301      	movs	r3, #1
 800022c:	743b      	strb	r3, [r7, #16]
    gpio.GPIO_Speed = GPIO_Speed_50MHz;
 800022e:	2302      	movs	r3, #2
 8000230:	747b      	strb	r3, [r7, #17]
    gpio.GPIO_OType = GPIO_OType_PP;
 8000232:	2300      	movs	r3, #0
 8000234:	74bb      	strb	r3, [r7, #18]
    gpio.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000236:	2302      	movs	r3, #2
 8000238:	74fb      	strb	r3, [r7, #19]
    GPIO_Init(LED_ONBOARD_GPIO_PORT, &gpio);
 800023a:	f107 030c 	add.w	r3, r7, #12
 800023e:	4619      	mov	r1, r3
 8000240:	4811      	ldr	r0, [pc, #68]	; (8000288 <Flash_Onboard_LED+0x74>)
 8000242:	f000 f968 	bl	8000516 <GPIO_Init>

    for (uint8_t i = 0; i < times; i++) {
 8000246:	2300      	movs	r3, #0
 8000248:	75fb      	strb	r3, [r7, #23]
 800024a:	e014      	b.n	8000276 <Flash_Onboard_LED+0x62>
        Set_Pin(LED_ONBOARD_GPIO_PORT, LED_ONBOARD_GPIO_PIN, GPIO_PIN_SET);
 800024c:	2201      	movs	r2, #1
 800024e:	2120      	movs	r1, #32
 8000250:	480d      	ldr	r0, [pc, #52]	; (8000288 <Flash_Onboard_LED+0x74>)
 8000252:	f000 f894 	bl	800037e <Set_Pin>
        delay_ms(300);
 8000256:	f44f 7096 	mov.w	r0, #300	; 0x12c
 800025a:	f7ff ffbb 	bl	80001d4 <delay_ms>
        Set_Pin(LED_ONBOARD_GPIO_PORT, LED_ONBOARD_GPIO_PIN, GPIO_PIN_RESET);
 800025e:	2200      	movs	r2, #0
 8000260:	2120      	movs	r1, #32
 8000262:	4809      	ldr	r0, [pc, #36]	; (8000288 <Flash_Onboard_LED+0x74>)
 8000264:	f000 f88b 	bl	800037e <Set_Pin>
        delay_ms(300);
 8000268:	f44f 7096 	mov.w	r0, #300	; 0x12c
 800026c:	f7ff ffb2 	bl	80001d4 <delay_ms>
    for (uint8_t i = 0; i < times; i++) {
 8000270:	7dfb      	ldrb	r3, [r7, #23]
 8000272:	3301      	adds	r3, #1
 8000274:	75fb      	strb	r3, [r7, #23]
 8000276:	7dfa      	ldrb	r2, [r7, #23]
 8000278:	79fb      	ldrb	r3, [r7, #7]
 800027a:	429a      	cmp	r2, r3
 800027c:	d3e6      	bcc.n	800024c <Flash_Onboard_LED+0x38>
    }
}
 800027e:	bf00      	nop
 8000280:	bf00      	nop
 8000282:	3718      	adds	r7, #24
 8000284:	46bd      	mov	sp, r7
 8000286:	bd80      	pop	{r7, pc}
 8000288:	40020000 	.word	0x40020000

0800028c <Led_Init>:

// GPIO Initialization
void Led_Init(void) {
 800028c:	b580      	push	{r7, lr}
 800028e:	b082      	sub	sp, #8
 8000290:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef gpio;
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 8000292:	2101      	movs	r1, #1
 8000294:	2001      	movs	r0, #1
 8000296:	f000 f9cd 	bl	8000634 <RCC_AHB1PeriphClockCmd>

    gpio.GPIO_Pin = LED1_GPIO_PIN | LED2_GPIO_PIN | LED3_GPIO_PIN;
 800029a:	f640 4301 	movw	r3, #3073	; 0xc01
 800029e:	603b      	str	r3, [r7, #0]
    gpio.GPIO_Mode = GPIO_Mode_OUT;
 80002a0:	2301      	movs	r3, #1
 80002a2:	713b      	strb	r3, [r7, #4]
    gpio.GPIO_Speed = GPIO_Speed_50MHz;
 80002a4:	2302      	movs	r3, #2
 80002a6:	717b      	strb	r3, [r7, #5]
    gpio.GPIO_OType = GPIO_OType_PP;
 80002a8:	2300      	movs	r3, #0
 80002aa:	71bb      	strb	r3, [r7, #6]
    gpio.GPIO_PuPd = GPIO_PuPd_DOWN;
 80002ac:	2302      	movs	r3, #2
 80002ae:	71fb      	strb	r3, [r7, #7]
    GPIO_Init(GPIOA, &gpio);
 80002b0:	463b      	mov	r3, r7
 80002b2:	4619      	mov	r1, r3
 80002b4:	4803      	ldr	r0, [pc, #12]	; (80002c4 <Led_Init+0x38>)
 80002b6:	f000 f92e 	bl	8000516 <GPIO_Init>
}
 80002ba:	bf00      	nop
 80002bc:	3708      	adds	r7, #8
 80002be:	46bd      	mov	sp, r7
 80002c0:	bd80      	pop	{r7, pc}
 80002c2:	bf00      	nop
 80002c4:	40020000 	.word	0x40020000

080002c8 <Button_Init>:

void Button_Init(void) {
 80002c8:	b580      	push	{r7, lr}
 80002ca:	b082      	sub	sp, #8
 80002cc:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef gpio;

    // B2 - PA6
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 80002ce:	2101      	movs	r1, #1
 80002d0:	2001      	movs	r0, #1
 80002d2:	f000 f9af 	bl	8000634 <RCC_AHB1PeriphClockCmd>
    gpio.GPIO_Pin = BUTTON_B2_PIN;
 80002d6:	2308      	movs	r3, #8
 80002d8:	603b      	str	r3, [r7, #0]
    gpio.GPIO_Mode = GPIO_Mode_IN;
 80002da:	2300      	movs	r3, #0
 80002dc:	713b      	strb	r3, [r7, #4]
    gpio.GPIO_PuPd = GPIO_PuPd_UP;
 80002de:	2301      	movs	r3, #1
 80002e0:	71fb      	strb	r3, [r7, #7]
    GPIO_Init(BUTTON_B2_PORT, &gpio);
 80002e2:	463b      	mov	r3, r7
 80002e4:	4619      	mov	r1, r3
 80002e6:	480b      	ldr	r0, [pc, #44]	; (8000314 <Button_Init+0x4c>)
 80002e8:	f000 f915 	bl	8000516 <GPIO_Init>

    // B5 - PB4
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 80002ec:	2101      	movs	r1, #1
 80002ee:	2002      	movs	r0, #2
 80002f0:	f000 f9a0 	bl	8000634 <RCC_AHB1PeriphClockCmd>
    gpio.GPIO_Pin = BUTTON_B5_PIN;
 80002f4:	2310      	movs	r3, #16
 80002f6:	603b      	str	r3, [r7, #0]
    gpio.GPIO_Mode = GPIO_Mode_IN;
 80002f8:	2300      	movs	r3, #0
 80002fa:	713b      	strb	r3, [r7, #4]
    gpio.GPIO_PuPd = GPIO_PuPd_UP;
 80002fc:	2301      	movs	r3, #1
 80002fe:	71fb      	strb	r3, [r7, #7]
    GPIO_Init(BUTTON_B5_PORT, &gpio);
 8000300:	463b      	mov	r3, r7
 8000302:	4619      	mov	r1, r3
 8000304:	4803      	ldr	r0, [pc, #12]	; (8000314 <Button_Init+0x4c>)
 8000306:	f000 f906 	bl	8000516 <GPIO_Init>
}
 800030a:	bf00      	nop
 800030c:	3708      	adds	r7, #8
 800030e:	46bd      	mov	sp, r7
 8000310:	bd80      	pop	{r7, pc}
 8000312:	bf00      	nop
 8000314:	40020400 	.word	0x40020400

08000318 <Buzzer_Init>:

void Buzzer_Init(void) {
 8000318:	b580      	push	{r7, lr}
 800031a:	b082      	sub	sp, #8
 800031c:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef gpio;
    RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 800031e:	2101      	movs	r1, #1
 8000320:	2004      	movs	r0, #4
 8000322:	f000 f987 	bl	8000634 <RCC_AHB1PeriphClockCmd>

    gpio.GPIO_Pin = BUZZER_PIN;
 8000326:	f44f 7300 	mov.w	r3, #512	; 0x200
 800032a:	603b      	str	r3, [r7, #0]
    gpio.GPIO_Mode = GPIO_Mode_OUT;
 800032c:	2301      	movs	r3, #1
 800032e:	713b      	strb	r3, [r7, #4]
    gpio.GPIO_Speed = GPIO_Speed_50MHz;
 8000330:	2302      	movs	r3, #2
 8000332:	717b      	strb	r3, [r7, #5]
    gpio.GPIO_OType = GPIO_OType_PP;
 8000334:	2300      	movs	r3, #0
 8000336:	71bb      	strb	r3, [r7, #6]
    gpio.GPIO_PuPd = GPIO_PuPd_DOWN;
 8000338:	2302      	movs	r3, #2
 800033a:	71fb      	strb	r3, [r7, #7]
    GPIO_Init(BUZZER_PORT, &gpio);
 800033c:	463b      	mov	r3, r7
 800033e:	4619      	mov	r1, r3
 8000340:	4803      	ldr	r0, [pc, #12]	; (8000350 <Buzzer_Init+0x38>)
 8000342:	f000 f8e8 	bl	8000516 <GPIO_Init>
}
 8000346:	bf00      	nop
 8000348:	3708      	adds	r7, #8
 800034a:	46bd      	mov	sp, r7
 800034c:	bd80      	pop	{r7, pc}
 800034e:	bf00      	nop
 8000350:	40020800 	.word	0x40020800

08000354 <Read_Button>:
uint8_t Read_Button(GPIO_TypeDef *port, uint16_t pin) {
 8000354:	b480      	push	{r7}
 8000356:	b083      	sub	sp, #12
 8000358:	af00      	add	r7, sp, #0
 800035a:	6078      	str	r0, [r7, #4]
 800035c:	460b      	mov	r3, r1
 800035e:	807b      	strh	r3, [r7, #2]
    return (port->IDR & pin) ? 1 : 0;
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	691a      	ldr	r2, [r3, #16]
 8000364:	887b      	ldrh	r3, [r7, #2]
 8000366:	4013      	ands	r3, r2
 8000368:	2b00      	cmp	r3, #0
 800036a:	bf14      	ite	ne
 800036c:	2301      	movne	r3, #1
 800036e:	2300      	moveq	r3, #0
 8000370:	b2db      	uxtb	r3, r3
}
 8000372:	4618      	mov	r0, r3
 8000374:	370c      	adds	r7, #12
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr

0800037e <Set_Pin>:

void Set_Pin(GPIO_TypeDef *port, uint16_t pin, uint8_t state) {
 800037e:	b480      	push	{r7}
 8000380:	b083      	sub	sp, #12
 8000382:	af00      	add	r7, sp, #0
 8000384:	6078      	str	r0, [r7, #4]
 8000386:	460b      	mov	r3, r1
 8000388:	807b      	strh	r3, [r7, #2]
 800038a:	4613      	mov	r3, r2
 800038c:	707b      	strb	r3, [r7, #1]
    if (state == GPIO_PIN_SET) {
 800038e:	787b      	ldrb	r3, [r7, #1]
 8000390:	2b01      	cmp	r3, #1
 8000392:	d103      	bne.n	800039c <Set_Pin+0x1e>
        port->BSRRL = pin;
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	887a      	ldrh	r2, [r7, #2]
 8000398:	831a      	strh	r2, [r3, #24]
    } else {
        port->BSRRH = pin;
    }
}
 800039a:	e002      	b.n	80003a2 <Set_Pin+0x24>
        port->BSRRH = pin;
 800039c:	687b      	ldr	r3, [r7, #4]
 800039e:	887a      	ldrh	r2, [r7, #2]
 80003a0:	835a      	strh	r2, [r3, #26]
}
 80003a2:	bf00      	nop
 80003a4:	370c      	adds	r7, #12
 80003a6:	46bd      	mov	sp, r7
 80003a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ac:	4770      	bx	lr
	...

080003b0 <Flash_RGB_and_Buzzer>:

void Flash_RGB_and_Buzzer(uint8_t times) {
 80003b0:	b580      	push	{r7, lr}
 80003b2:	b084      	sub	sp, #16
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	4603      	mov	r3, r0
 80003b8:	71fb      	strb	r3, [r7, #7]
    for (uint8_t i = 0; i < times; i++) {
 80003ba:	2300      	movs	r3, #0
 80003bc:	73fb      	strb	r3, [r7, #15]
 80003be:	e02c      	b.n	800041a <Flash_RGB_and_Buzzer+0x6a>
        Set_Pin(LED1_GPIO_PORT, LED1_GPIO_PIN, GPIO_PIN_SET);
 80003c0:	2201      	movs	r2, #1
 80003c2:	2101      	movs	r1, #1
 80003c4:	4819      	ldr	r0, [pc, #100]	; (800042c <Flash_RGB_and_Buzzer+0x7c>)
 80003c6:	f7ff ffda 	bl	800037e <Set_Pin>
        Set_Pin(LED2_GPIO_PORT, LED2_GPIO_PIN, GPIO_PIN_SET);
 80003ca:	2201      	movs	r2, #1
 80003cc:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80003d0:	4816      	ldr	r0, [pc, #88]	; (800042c <Flash_RGB_and_Buzzer+0x7c>)
 80003d2:	f7ff ffd4 	bl	800037e <Set_Pin>
        Set_Pin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_SET);
 80003d6:	2201      	movs	r2, #1
 80003d8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80003dc:	4814      	ldr	r0, [pc, #80]	; (8000430 <Flash_RGB_and_Buzzer+0x80>)
 80003de:	f7ff ffce 	bl	800037e <Set_Pin>
        delay_ms(300);
 80003e2:	f44f 7096 	mov.w	r0, #300	; 0x12c
 80003e6:	f7ff fef5 	bl	80001d4 <delay_ms>
        Set_Pin(LED1_GPIO_PORT, LED1_GPIO_PIN, GPIO_PIN_RESET);
 80003ea:	2200      	movs	r2, #0
 80003ec:	2101      	movs	r1, #1
 80003ee:	480f      	ldr	r0, [pc, #60]	; (800042c <Flash_RGB_and_Buzzer+0x7c>)
 80003f0:	f7ff ffc5 	bl	800037e <Set_Pin>
        Set_Pin(LED2_GPIO_PORT, LED2_GPIO_PIN, GPIO_PIN_RESET);
 80003f4:	2200      	movs	r2, #0
 80003f6:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80003fa:	480c      	ldr	r0, [pc, #48]	; (800042c <Flash_RGB_and_Buzzer+0x7c>)
 80003fc:	f7ff ffbf 	bl	800037e <Set_Pin>
        Set_Pin(BUZZER_PORT, BUZZER_PIN, GPIO_PIN_RESET);
 8000400:	2200      	movs	r2, #0
 8000402:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000406:	480a      	ldr	r0, [pc, #40]	; (8000430 <Flash_RGB_and_Buzzer+0x80>)
 8000408:	f7ff ffb9 	bl	800037e <Set_Pin>
        delay_ms(300);
 800040c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8000410:	f7ff fee0 	bl	80001d4 <delay_ms>
    for (uint8_t i = 0; i < times; i++) {
 8000414:	7bfb      	ldrb	r3, [r7, #15]
 8000416:	3301      	adds	r3, #1
 8000418:	73fb      	strb	r3, [r7, #15]
 800041a:	7bfa      	ldrb	r2, [r7, #15]
 800041c:	79fb      	ldrb	r3, [r7, #7]
 800041e:	429a      	cmp	r2, r3
 8000420:	d3ce      	bcc.n	80003c0 <Flash_RGB_and_Buzzer+0x10>
    }
}
 8000422:	bf00      	nop
 8000424:	bf00      	nop
 8000426:	3710      	adds	r7, #16
 8000428:	46bd      	mov	sp, r7
 800042a:	bd80      	pop	{r7, pc}
 800042c:	40020000 	.word	0x40020000
 8000430:	40020800 	.word	0x40020800

08000434 <main>:

int main(void) {
 8000434:	b580      	push	{r7, lr}
 8000436:	b082      	sub	sp, #8
 8000438:	af00      	add	r7, sp, #0
    Led_Init();
 800043a:	f7ff ff27 	bl	800028c <Led_Init>
    Button_Init();
 800043e:	f7ff ff43 	bl	80002c8 <Button_Init>
    Buzzer_Init();
 8000442:	f7ff ff69 	bl	8000318 <Buzzer_Init>

    // 1. Flash onboard LED to indicate power-on
    Flash_Onboard_LED(1);
 8000446:	2001      	movs	r0, #1
 8000448:	f7ff fee4 	bl	8000214 <Flash_Onboard_LED>

    uint8_t B2_pressed_flag = 0;
 800044c:	2300      	movs	r3, #0
 800044e:	71fb      	strb	r3, [r7, #7]

    while (1) {
        // ----------- Handle button B2: press once to flash RGB GREEN LEDs and buzzer --------
        if (Read_Button(BUTTON_B2_PORT, BUTTON_B2_PIN) == BTN_PRESS) {
 8000450:	2108      	movs	r1, #8
 8000452:	481a      	ldr	r0, [pc, #104]	; (80004bc <main+0x88>)
 8000454:	f7ff ff7e 	bl	8000354 <Read_Button>
 8000458:	4603      	mov	r3, r0
 800045a:	2b00      	cmp	r3, #0
 800045c:	d10b      	bne.n	8000476 <main+0x42>
            if (B2_pressed_flag == 0) {
 800045e:	79fb      	ldrb	r3, [r7, #7]
 8000460:	2b00      	cmp	r3, #0
 8000462:	d10a      	bne.n	800047a <main+0x46>
                delay_ms(50);  // Debounce
 8000464:	2032      	movs	r0, #50	; 0x32
 8000466:	f7ff feb5 	bl	80001d4 <delay_ms>
                Flash_RGB_and_Buzzer(1);  // Flash LEDs and buzzer once
 800046a:	2001      	movs	r0, #1
 800046c:	f7ff ffa0 	bl	80003b0 <Flash_RGB_and_Buzzer>
                B2_pressed_flag = 1;
 8000470:	2301      	movs	r3, #1
 8000472:	71fb      	strb	r3, [r7, #7]
 8000474:	e001      	b.n	800047a <main+0x46>
            }
        } else {
            B2_pressed_flag = 0;
 8000476:	2300      	movs	r3, #0
 8000478:	71fb      	strb	r3, [r7, #7]
        }

        // ----------- Handle button B5: hold > 500ms to turn on LED_3 (BLUE) ----------
        if (Read_Button(BUTTON_B5_PORT, BUTTON_B5_PIN) == BTN_PRESS) {
 800047a:	2110      	movs	r1, #16
 800047c:	480f      	ldr	r0, [pc, #60]	; (80004bc <main+0x88>)
 800047e:	f7ff ff69 	bl	8000354 <Read_Button>
 8000482:	4603      	mov	r3, r0
 8000484:	2b00      	cmp	r3, #0
 8000486:	d1e3      	bne.n	8000450 <main+0x1c>
            delay_ms(500);  // Check if held for 500ms
 8000488:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800048c:	f7ff fea2 	bl	80001d4 <delay_ms>
            if (Read_Button(BUTTON_B5_PORT, BUTTON_B5_PIN) == BTN_PRESS) {
 8000490:	2110      	movs	r1, #16
 8000492:	480a      	ldr	r0, [pc, #40]	; (80004bc <main+0x88>)
 8000494:	f7ff ff5e 	bl	8000354 <Read_Button>
 8000498:	4603      	mov	r3, r0
 800049a:	2b00      	cmp	r3, #0
 800049c:	d106      	bne.n	80004ac <main+0x78>
                Set_Pin(LED3_GPIO_PORT, LED3_GPIO_PIN, GPIO_PIN_SET);  // Turn on LED_3
 800049e:	2201      	movs	r2, #1
 80004a0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80004a4:	4806      	ldr	r0, [pc, #24]	; (80004c0 <main+0x8c>)
 80004a6:	f7ff ff6a 	bl	800037e <Set_Pin>
 80004aa:	e7d1      	b.n	8000450 <main+0x1c>
            }else
            {
            	Set_Pin(LED3_GPIO_PORT, LED3_GPIO_PIN, GPIO_PIN_RESET);
 80004ac:	2200      	movs	r2, #0
 80004ae:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80004b2:	4803      	ldr	r0, [pc, #12]	; (80004c0 <main+0x8c>)
 80004b4:	f7ff ff63 	bl	800037e <Set_Pin>
        if (Read_Button(BUTTON_B2_PORT, BUTTON_B2_PIN) == BTN_PRESS) {
 80004b8:	e7ca      	b.n	8000450 <main+0x1c>
 80004ba:	bf00      	nop
 80004bc:	40020400 	.word	0x40020400
 80004c0:	40020000 	.word	0x40020000

080004c4 <Reset_Handler>:
 80004c4:	480d      	ldr	r0, [pc, #52]	; (80004fc <LoopForever+0x2>)
 80004c6:	4685      	mov	sp, r0
 80004c8:	f3af 8000 	nop.w
 80004cc:	480c      	ldr	r0, [pc, #48]	; (8000500 <LoopForever+0x6>)
 80004ce:	490d      	ldr	r1, [pc, #52]	; (8000504 <LoopForever+0xa>)
 80004d0:	4a0d      	ldr	r2, [pc, #52]	; (8000508 <LoopForever+0xe>)
 80004d2:	2300      	movs	r3, #0
 80004d4:	e002      	b.n	80004dc <LoopCopyDataInit>

080004d6 <CopyDataInit>:
 80004d6:	58d4      	ldr	r4, [r2, r3]
 80004d8:	50c4      	str	r4, [r0, r3]
 80004da:	3304      	adds	r3, #4

080004dc <LoopCopyDataInit>:
 80004dc:	18c4      	adds	r4, r0, r3
 80004de:	428c      	cmp	r4, r1
 80004e0:	d3f9      	bcc.n	80004d6 <CopyDataInit>
 80004e2:	4a0a      	ldr	r2, [pc, #40]	; (800050c <LoopForever+0x12>)
 80004e4:	4c0a      	ldr	r4, [pc, #40]	; (8000510 <LoopForever+0x16>)
 80004e6:	2300      	movs	r3, #0
 80004e8:	e001      	b.n	80004ee <LoopFillZerobss>

080004ea <FillZerobss>:
 80004ea:	6013      	str	r3, [r2, #0]
 80004ec:	3204      	adds	r2, #4

080004ee <LoopFillZerobss>:
 80004ee:	42a2      	cmp	r2, r4
 80004f0:	d3fb      	bcc.n	80004ea <FillZerobss>
 80004f2:	f000 f8bf 	bl	8000674 <__libc_init_array>
 80004f6:	f7ff ff9d 	bl	8000434 <main>

080004fa <LoopForever>:
 80004fa:	e7fe      	b.n	80004fa <LoopForever>
 80004fc:	20018000 	.word	0x20018000
 8000500:	20000000 	.word	0x20000000
 8000504:	20000000 	.word	0x20000000
 8000508:	080006dc 	.word	0x080006dc
 800050c:	20000000 	.word	0x20000000
 8000510:	2000001c 	.word	0x2000001c

08000514 <ADC_IRQHandler>:
 8000514:	e7fe      	b.n	8000514 <ADC_IRQHandler>

08000516 <GPIO_Init>:
 8000516:	b480      	push	{r7}
 8000518:	b087      	sub	sp, #28
 800051a:	af00      	add	r7, sp, #0
 800051c:	6078      	str	r0, [r7, #4]
 800051e:	6039      	str	r1, [r7, #0]
 8000520:	2300      	movs	r3, #0
 8000522:	617b      	str	r3, [r7, #20]
 8000524:	2300      	movs	r3, #0
 8000526:	613b      	str	r3, [r7, #16]
 8000528:	2300      	movs	r3, #0
 800052a:	60fb      	str	r3, [r7, #12]
 800052c:	2300      	movs	r3, #0
 800052e:	617b      	str	r3, [r7, #20]
 8000530:	e076      	b.n	8000620 <GPIO_Init+0x10a>
 8000532:	2201      	movs	r2, #1
 8000534:	697b      	ldr	r3, [r7, #20]
 8000536:	fa02 f303 	lsl.w	r3, r2, r3
 800053a:	613b      	str	r3, [r7, #16]
 800053c:	683b      	ldr	r3, [r7, #0]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	693a      	ldr	r2, [r7, #16]
 8000542:	4013      	ands	r3, r2
 8000544:	60fb      	str	r3, [r7, #12]
 8000546:	68fa      	ldr	r2, [r7, #12]
 8000548:	693b      	ldr	r3, [r7, #16]
 800054a:	429a      	cmp	r2, r3
 800054c:	d165      	bne.n	800061a <GPIO_Init+0x104>
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681a      	ldr	r2, [r3, #0]
 8000552:	697b      	ldr	r3, [r7, #20]
 8000554:	005b      	lsls	r3, r3, #1
 8000556:	2103      	movs	r1, #3
 8000558:	fa01 f303 	lsl.w	r3, r1, r3
 800055c:	43db      	mvns	r3, r3
 800055e:	401a      	ands	r2, r3
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	601a      	str	r2, [r3, #0]
 8000564:	687b      	ldr	r3, [r7, #4]
 8000566:	681a      	ldr	r2, [r3, #0]
 8000568:	683b      	ldr	r3, [r7, #0]
 800056a:	791b      	ldrb	r3, [r3, #4]
 800056c:	4619      	mov	r1, r3
 800056e:	697b      	ldr	r3, [r7, #20]
 8000570:	005b      	lsls	r3, r3, #1
 8000572:	fa01 f303 	lsl.w	r3, r1, r3
 8000576:	431a      	orrs	r2, r3
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	601a      	str	r2, [r3, #0]
 800057c:	683b      	ldr	r3, [r7, #0]
 800057e:	791b      	ldrb	r3, [r3, #4]
 8000580:	2b01      	cmp	r3, #1
 8000582:	d003      	beq.n	800058c <GPIO_Init+0x76>
 8000584:	683b      	ldr	r3, [r7, #0]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	2b02      	cmp	r3, #2
 800058a:	d12e      	bne.n	80005ea <GPIO_Init+0xd4>
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	689a      	ldr	r2, [r3, #8]
 8000590:	697b      	ldr	r3, [r7, #20]
 8000592:	005b      	lsls	r3, r3, #1
 8000594:	2103      	movs	r1, #3
 8000596:	fa01 f303 	lsl.w	r3, r1, r3
 800059a:	43db      	mvns	r3, r3
 800059c:	401a      	ands	r2, r3
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	609a      	str	r2, [r3, #8]
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	689a      	ldr	r2, [r3, #8]
 80005a6:	683b      	ldr	r3, [r7, #0]
 80005a8:	795b      	ldrb	r3, [r3, #5]
 80005aa:	4619      	mov	r1, r3
 80005ac:	697b      	ldr	r3, [r7, #20]
 80005ae:	005b      	lsls	r3, r3, #1
 80005b0:	fa01 f303 	lsl.w	r3, r1, r3
 80005b4:	431a      	orrs	r2, r3
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	609a      	str	r2, [r3, #8]
 80005ba:	687b      	ldr	r3, [r7, #4]
 80005bc:	685a      	ldr	r2, [r3, #4]
 80005be:	697b      	ldr	r3, [r7, #20]
 80005c0:	b29b      	uxth	r3, r3
 80005c2:	4619      	mov	r1, r3
 80005c4:	2301      	movs	r3, #1
 80005c6:	408b      	lsls	r3, r1
 80005c8:	43db      	mvns	r3, r3
 80005ca:	401a      	ands	r2, r3
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	605a      	str	r2, [r3, #4]
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	685b      	ldr	r3, [r3, #4]
 80005d4:	683a      	ldr	r2, [r7, #0]
 80005d6:	7992      	ldrb	r2, [r2, #6]
 80005d8:	4611      	mov	r1, r2
 80005da:	697a      	ldr	r2, [r7, #20]
 80005dc:	b292      	uxth	r2, r2
 80005de:	fa01 f202 	lsl.w	r2, r1, r2
 80005e2:	b292      	uxth	r2, r2
 80005e4:	431a      	orrs	r2, r3
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	605a      	str	r2, [r3, #4]
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	68da      	ldr	r2, [r3, #12]
 80005ee:	697b      	ldr	r3, [r7, #20]
 80005f0:	b29b      	uxth	r3, r3
 80005f2:	005b      	lsls	r3, r3, #1
 80005f4:	2103      	movs	r1, #3
 80005f6:	fa01 f303 	lsl.w	r3, r1, r3
 80005fa:	43db      	mvns	r3, r3
 80005fc:	401a      	ands	r2, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	60da      	str	r2, [r3, #12]
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	68da      	ldr	r2, [r3, #12]
 8000606:	683b      	ldr	r3, [r7, #0]
 8000608:	79db      	ldrb	r3, [r3, #7]
 800060a:	4619      	mov	r1, r3
 800060c:	697b      	ldr	r3, [r7, #20]
 800060e:	005b      	lsls	r3, r3, #1
 8000610:	fa01 f303 	lsl.w	r3, r1, r3
 8000614:	431a      	orrs	r2, r3
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	60da      	str	r2, [r3, #12]
 800061a:	697b      	ldr	r3, [r7, #20]
 800061c:	3301      	adds	r3, #1
 800061e:	617b      	str	r3, [r7, #20]
 8000620:	697b      	ldr	r3, [r7, #20]
 8000622:	2b0f      	cmp	r3, #15
 8000624:	d985      	bls.n	8000532 <GPIO_Init+0x1c>
 8000626:	bf00      	nop
 8000628:	371c      	adds	r7, #28
 800062a:	46bd      	mov	sp, r7
 800062c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000630:	4770      	bx	lr
	...

08000634 <RCC_AHB1PeriphClockCmd>:
 8000634:	b480      	push	{r7}
 8000636:	b083      	sub	sp, #12
 8000638:	af00      	add	r7, sp, #0
 800063a:	6078      	str	r0, [r7, #4]
 800063c:	460b      	mov	r3, r1
 800063e:	70fb      	strb	r3, [r7, #3]
 8000640:	78fb      	ldrb	r3, [r7, #3]
 8000642:	2b00      	cmp	r3, #0
 8000644:	d006      	beq.n	8000654 <RCC_AHB1PeriphClockCmd+0x20>
 8000646:	4b0a      	ldr	r3, [pc, #40]	; (8000670 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000648:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800064a:	4909      	ldr	r1, [pc, #36]	; (8000670 <RCC_AHB1PeriphClockCmd+0x3c>)
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	4313      	orrs	r3, r2
 8000650:	630b      	str	r3, [r1, #48]	; 0x30
 8000652:	e006      	b.n	8000662 <RCC_AHB1PeriphClockCmd+0x2e>
 8000654:	4b06      	ldr	r3, [pc, #24]	; (8000670 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000656:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000658:	687b      	ldr	r3, [r7, #4]
 800065a:	43db      	mvns	r3, r3
 800065c:	4904      	ldr	r1, [pc, #16]	; (8000670 <RCC_AHB1PeriphClockCmd+0x3c>)
 800065e:	4013      	ands	r3, r2
 8000660:	630b      	str	r3, [r1, #48]	; 0x30
 8000662:	bf00      	nop
 8000664:	370c      	adds	r7, #12
 8000666:	46bd      	mov	sp, r7
 8000668:	f85d 7b04 	ldr.w	r7, [sp], #4
 800066c:	4770      	bx	lr
 800066e:	bf00      	nop
 8000670:	40023800 	.word	0x40023800

08000674 <__libc_init_array>:
 8000674:	b570      	push	{r4, r5, r6, lr}
 8000676:	4d0d      	ldr	r5, [pc, #52]	; (80006ac <__libc_init_array+0x38>)
 8000678:	4c0d      	ldr	r4, [pc, #52]	; (80006b0 <__libc_init_array+0x3c>)
 800067a:	1b64      	subs	r4, r4, r5
 800067c:	10a4      	asrs	r4, r4, #2
 800067e:	2600      	movs	r6, #0
 8000680:	42a6      	cmp	r6, r4
 8000682:	d109      	bne.n	8000698 <__libc_init_array+0x24>
 8000684:	4d0b      	ldr	r5, [pc, #44]	; (80006b4 <__libc_init_array+0x40>)
 8000686:	4c0c      	ldr	r4, [pc, #48]	; (80006b8 <__libc_init_array+0x44>)
 8000688:	f000 f818 	bl	80006bc <_init>
 800068c:	1b64      	subs	r4, r4, r5
 800068e:	10a4      	asrs	r4, r4, #2
 8000690:	2600      	movs	r6, #0
 8000692:	42a6      	cmp	r6, r4
 8000694:	d105      	bne.n	80006a2 <__libc_init_array+0x2e>
 8000696:	bd70      	pop	{r4, r5, r6, pc}
 8000698:	f855 3b04 	ldr.w	r3, [r5], #4
 800069c:	4798      	blx	r3
 800069e:	3601      	adds	r6, #1
 80006a0:	e7ee      	b.n	8000680 <__libc_init_array+0xc>
 80006a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80006a6:	4798      	blx	r3
 80006a8:	3601      	adds	r6, #1
 80006aa:	e7f2      	b.n	8000692 <__libc_init_array+0x1e>
 80006ac:	080006d4 	.word	0x080006d4
 80006b0:	080006d4 	.word	0x080006d4
 80006b4:	080006d4 	.word	0x080006d4
 80006b8:	080006d8 	.word	0x080006d8

080006bc <_init>:
 80006bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006be:	bf00      	nop
 80006c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006c2:	bc08      	pop	{r3}
 80006c4:	469e      	mov	lr, r3
 80006c6:	4770      	bx	lr

080006c8 <_fini>:
 80006c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ca:	bf00      	nop
 80006cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006ce:	bc08      	pop	{r3}
 80006d0:	469e      	mov	lr, r3
 80006d2:	4770      	bx	lr
